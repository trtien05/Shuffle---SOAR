{"version":3,"file":"index.esm.js","sources":["../src/useLatest.ts","../src/index.ts"],"sourcesContent":["import type { RefObject } from \"react\";\nimport { useRef } from \"react\";\n\nexport default <T>(val: T): RefObject<T> => {\n  const ref = useRef(val);\n  ref.current = val;\n  return ref;\n};\n","import { useState, useRef, useEffect, useCallback } from \"react\";\n\nimport useLatest from \"./useLatest\";\n\nexport const observerErr =\n  \"ðŸ’¡ react-cool-dimensions: the browser doesn't support Resize Observer, please use polyfill: https://github.com/wellyshen/react-cool-dimensions#resizeobserver-polyfill\";\nexport const borderBoxWarn =\n  \"ðŸ’¡ react-cool-dimensions: the browser doesn't support border-box size, fallback to content-box size. Please see: https://github.com/wellyshen/react-cool-dimensions#border-box-size-measurement\";\n\ninterface State {\n  readonly currentBreakpoint: string;\n  readonly width: number | null;\n  readonly height: number | null;\n  readonly entry?: ResizeObserverEntry;\n}\ninterface Observe<T> {\n  (element?: T | null): void;\n}\ninterface Event<T> extends State {\n  readonly entry: ResizeObserverEntry;\n  observe: Observe<T>;\n  unobserve: () => void;\n}\ninterface OnResize<T> {\n  (event: Event<T>): void;\n}\ninterface ShouldUpdate {\n  (state: State): boolean;\n}\ntype Breakpoints = Record<string, number>;\nexport interface Options<T> {\n  useBorderBoxSize?: boolean;\n  breakpoints?: Breakpoints;\n  updateOnBreakpointChange?: boolean;\n  shouldUpdate?: ShouldUpdate;\n  onResize?: OnResize<T>;\n  polyfill?: any;\n}\ninterface Return<T> extends Omit<Event<T>, \"entry\"> {\n  entry?: ResizeObserverEntry;\n}\n\nconst getCurrentBreakpoint = (bps: Breakpoints, w: number): string => {\n  let curBp = \"\";\n  let max = -1;\n\n  Object.keys(bps).forEach((key: string) => {\n    const val = bps[key];\n\n    if (w >= val && val > max) {\n      curBp = key;\n      max = val;\n    }\n  });\n\n  return curBp;\n};\n\nconst useDimensions = <T extends HTMLElement | null>({\n  useBorderBoxSize,\n  breakpoints,\n  updateOnBreakpointChange,\n  shouldUpdate,\n  onResize,\n  polyfill,\n}: Options<T> = {}): Return<T> => {\n  const [state, setState] = useState<State>({\n    currentBreakpoint: \"\",\n    width: null,\n    height: null,\n  });\n  const prevSizeRef = useRef<{ width?: number; height?: number }>({});\n  const prevBreakpointRef = useRef<string>();\n  const observerRef = useRef<ResizeObserver>();\n  const warnedRef = useRef(false);\n  const ref = useRef<T>();\n  const onResizeRef = useLatest<OnResize<T> | undefined>(onResize);\n  const shouldUpdateRef = useLatest<ShouldUpdate | undefined>(shouldUpdate);\n\n  const unobserve = useCallback(() => {\n    if (observerRef.current) observerRef.current.disconnect();\n  }, []);\n\n  const observe = useCallback<Observe<T>>(\n    (element) => {\n      if (element && element !== ref.current) {\n        unobserve();\n        ref.current = element;\n        setState({\n          currentBreakpoint: \"\",\n          width: element.clientWidth,\n          height: element.clientHeight,\n        });\n      }\n      if (observerRef.current && ref.current)\n        observerRef.current.observe(ref.current as HTMLElement);\n    },\n    [unobserve]\n  );\n\n  useEffect(() => {\n    if (\n      (!(\"ResizeObserver\" in window) || !(\"ResizeObserverEntry\" in window)) &&\n      !polyfill\n    ) {\n      console.error(observerErr);\n      return () => null;\n    }\n\n    let raf: number | null = null;\n\n    // eslint-disable-next-line compat/compat\n    observerRef.current = new (polyfill || ResizeObserver)(([entry]: any) => {\n      raf = requestAnimationFrame(() => {\n        const { contentBoxSize, borderBoxSize, contentRect } = entry;\n\n        let boxSize = contentBoxSize;\n        if (useBorderBoxSize)\n          if (borderBoxSize) {\n            boxSize = borderBoxSize;\n          } else if (!warnedRef.current) {\n            console.warn(borderBoxWarn);\n            warnedRef.current = true;\n          }\n        // @juggle/resize-observer polyfill has different data structure\n        boxSize = Array.isArray(boxSize) ? boxSize[0] : boxSize;\n\n        const width = boxSize ? boxSize.inlineSize : contentRect.width;\n        const height = boxSize ? boxSize.blockSize : contentRect.height;\n\n        if (\n          width === prevSizeRef.current.width &&\n          height === prevSizeRef.current.height\n        )\n          return;\n\n        prevSizeRef.current = { width, height };\n\n        const e = {\n          currentBreakpoint: \"\",\n          width,\n          height,\n          entry,\n          observe,\n          unobserve,\n        };\n\n        if (breakpoints) {\n          e.currentBreakpoint = getCurrentBreakpoint(breakpoints, width);\n\n          if (e.currentBreakpoint !== prevBreakpointRef.current) {\n            if (onResizeRef.current) onResizeRef.current(e);\n            prevBreakpointRef.current = e.currentBreakpoint;\n          }\n        } else if (onResizeRef.current) {\n          onResizeRef.current(e);\n        }\n\n        const next = {\n          currentBreakpoint: e.currentBreakpoint,\n          width,\n          height,\n          entry,\n        };\n\n        if (shouldUpdateRef.current && !shouldUpdateRef.current(next)) return;\n\n        if (\n          !shouldUpdateRef.current &&\n          breakpoints &&\n          updateOnBreakpointChange\n        ) {\n          setState((prev) =>\n            prev.currentBreakpoint !== next.currentBreakpoint ? next : prev\n          );\n          return;\n        }\n\n        setState(next);\n      });\n    });\n\n    observe();\n\n    return () => {\n      unobserve();\n      if (raf) cancelAnimationFrame(raf);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    JSON.stringify(breakpoints),\n    useBorderBoxSize,\n    observe,\n    unobserve,\n    updateOnBreakpointChange,\n  ]);\n\n  return { ...state, observe, unobserve };\n};\n\nexport default useDimensions;\n"],"names":["val","ref","useRef","current","observerErr","borderBoxWarn","getCurrentBreakpoint","bps","w","curBp","max","Object","keys","forEach","key","useDimensions","_temp","_ref","useBorderBoxSize","breakpoints","updateOnBreakpointChange","shouldUpdate","onResize","polyfill","_useState","useState","currentBreakpoint","width","height","state","setState","prevSizeRef","prevBreakpointRef","observerRef","warnedRef","onResizeRef","useLatest","shouldUpdateRef","unobserve","useCallback","disconnect","observe","element","clientWidth","clientHeight","useEffect","window","console","error","raf","ResizeObserver","_ref2","entry","requestAnimationFrame","contentBoxSize","borderBoxSize","contentRect","boxSize","warn","Array","isArray","inlineSize","blockSize","e","next","prev","cancelAnimationFrame","JSON","stringify","_extends"],"mappings":"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"}