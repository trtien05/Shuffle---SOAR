import React, { FC } from 'react';
export type CalendarViewType = 'days' | 'months' | 'years';
export interface CalendarProps {
    /**
     * The selected date(s) for the calendar.
     */
    value?: Date | [Date, Date] | [Date, undefined] | [undefined, undefined] | undefined;
    /**
     * The minimum selectable date for the calendar.
     */
    min?: Date;
    /**
     * The maximum selectable date for the calendar.
     * Can also be set to 'now' to use the current date.
     */
    max?: Date | 'now';
    /**
     * Whether the calendar is disabled.
     */
    disabled?: boolean;
    /**
     * Whether the calendar is a range picker.
     */
    isRange?: boolean;
    /**
     * The text or icon to use for next.
     */
    nextArrow?: React.ReactNode | string;
    /**
     * The text or icon to use for previous.
     */
    previousArrow?: React.ReactNode | string;
    /**
     * The date format to use for the calendar. Defaults 'MMMM yyyy'.
     */
    dateFormat?: string;
    /**
     * Whether to display day of week labels
     */
    showDayOfWeek?: boolean;
    /**
     * Whether to animate the calendar.
     */
    animated?: boolean;
    /**
     * A callback function that is called when the selected date(s) change.
     */
    onChange?: (value: Date | [Date, Date]) => void;
    /**
     * A callback function that is called when the calendar view changes.
     */
    onViewChange?: (view: CalendarViewType) => void;
}
export declare const Calendar: FC<CalendarProps>;
