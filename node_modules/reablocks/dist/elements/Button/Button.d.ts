import React, { FC, Ref } from 'react';
export interface ButtonProps extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, 'onAnimationStart' | 'onDragStart' | 'onDragEnd' | 'onDrag'> {
    /**
     * Color variation of the button.
     */
    color?: 'default' | 'primary' | 'secondary' | 'error' | 'success' | 'warning';
    /**
     * Style variant of the button.
     */
    variant?: 'filled' | 'outline' | 'text';
    /**
     * The size variation of the button.
     */
    size?: 'small' | 'medium' | 'large';
    /**
     * If true, the button will take up the full width of its container.
     */
    fullWidth?: boolean;
    /**
     * If true, the margins of the button will be disabled.
     */
    disableMargins?: boolean;
    /**
     * If true, the padding of the button will be disabled.
     */
    disablePadding?: boolean;
    /**
     * If true, the animation of the button will be disabled.
     */
    disableAnimation?: boolean;
    /**
     * Element to display before the Button content.
     */
    startAdornment?: any;
    /**
     * Element to display after the Button content.
     */
    endAdornment?: any;
}
export interface ButtonRef {
    ref?: Ref<HTMLButtonElement>;
}
export declare const Button: FC<ButtonProps & ButtonRef>;
